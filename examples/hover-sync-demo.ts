/**
 * Hover Sync Demo - Task 7.3
 * 
 * This demo shows how the hover sync functionality works between blocks:
 * - When hovering over a field pill, corresponding pills in the opposite block are highlighted
 * - Fields with `inBoth === true` get `scale` + `dashed-border` effects
 * - The sync works bidirectionally between Sumsub and Counterparty blocks
 */

// Example field pairings that would be generated by buildComparableSets
const exampleFieldPairings = new Map<string, string[]>([
  ['passportNumber', ['id_document_number']],
  ['date_of_birth', ['date_of_birth']],
  ['fullName', ['fullName', 'legalName']],
  ['address', ['residentialAddress', 'mailingAddress']]
]);

// Example reverse pairings
const exampleReversePairings = new Map<string, string[]>([
  ['id_document_number', ['passportNumber']],
  ['date_of_birth', ['date_of_birth']],
  ['fullName', ['fullName']],
  ['legalName', ['fullName']],
  ['residentialAddress', ['address']],
  ['mailingAddress', ['address']]
]);

/**
 * Simulate hover sync behavior
 */
function simulateHoverSync(hoveredField: string | null) {
  console.log(`\nüîç Hovering over: ${hoveredField || 'none'}`);
  
  if (!hoveredField) {
    console.log('   No field highlighted');
    return;
  }

  // Find matching fields in the opposite block
  const matches = exampleFieldPairings.get(hoveredField) || [];
  const reverseMatches = exampleReversePairings.get(hoveredField) || [];
  
  if (matches.length > 0) {
    console.log(`   ‚úÖ Matching fields in counterparty block: ${matches.join(', ')}`);
    console.log(`   üéØ These fields would get: scale-105 + border-dashed + border-blue-400 + shadow-lg`);
  }
  
  if (reverseMatches.length > 0) {
    console.log(`   ‚úÖ Matching fields in applicant block: ${reverseMatches.join(', ')}`);
    console.log(`   üéØ These fields would get: scale-105 + border-dashed + border-blue-400 + shadow-lg`);
  }
  
  if (matches.length === 0 && reverseMatches.length === 0) {
    console.log('   ‚ùå No matching fields found');
  }
}

// Demo the hover sync functionality
console.log('üöÄ Hover Sync Demo - Task 7.3');
console.log('================================');

// Test different hover scenarios
simulateHoverSync('passportNumber');
simulateHoverSync('date_of_birth');
simulateHoverSync('fullName');
simulateHoverSync('address');
simulateHoverSync('legalName');
simulateHoverSync(null);

console.log('\nüìã Implementation Details:');
console.log('- Hover state is managed in App.tsx with useState');
console.log('- VaspRequirementsBlock receives hoveredField and onFieldHover props');
console.log('- FieldPill applies hover sync effects via CSS classes');
console.log('- Effects: scale-105, border-dashed, border-2, border-blue-400, shadow-lg');
console.log('- Bidirectional sync between Sumsub (blue) and Counterparty (purple) blocks');
